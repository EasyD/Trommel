/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.sablecc.parser;

import org.sablecc.sablecc.node.*;
import org.sablecc.sablecc.analysis.*;

class TokenIndex extends AnalysisAdapter
{
  int index;

  public void caseTPkgId(TPkgId node)
  {
    index = 0;
  }

  public void caseTPackage(TPackage node)
  {
    index = 1;
  }

  public void caseTStates(TStates node)
  {
    index = 2;
  }

  public void caseTHelpers(THelpers node)
  {
    index = 3;
  }

  public void caseTTokens(TTokens node)
  {
    index = 4;
  }

  public void caseTIgnored(TIgnored node)
  {
    index = 5;
  }

  public void caseTProductions(TProductions node)
  {
    index = 6;
  }

  public void caseTAbstract(TAbstract node)
  {
    index = 7;
  }

  public void caseTSyntax(TSyntax node)
  {
    index = 8;
  }

  public void caseTTree(TTree node)
  {
    index = 9;
  }

  public void caseTNew(TNew node)
  {
    index = 10;
  }

  public void caseTNull(TNull node)
  {
    index = 11;
  }

  public void caseTTokenSpecifier(TTokenSpecifier node)
  {
    index = 12;
  }

  public void caseTProductionSpecifier(TProductionSpecifier node)
  {
    index = 13;
  }

  public void caseTDot(TDot node)
  {
    index = 14;
  }

  public void caseTDDot(TDDot node)
  {
    index = 15;
  }

  public void caseTSemicolon(TSemicolon node)
  {
    index = 16;
  }

  public void caseTEqual(TEqual node)
  {
    index = 17;
  }

  public void caseTLBkt(TLBkt node)
  {
    index = 18;
  }

  public void caseTRBkt(TRBkt node)
  {
    index = 19;
  }

  public void caseTLPar(TLPar node)
  {
    index = 20;
  }

  public void caseTRPar(TRPar node)
  {
    index = 21;
  }

  public void caseTLBrace(TLBrace node)
  {
    index = 22;
  }

  public void caseTRBrace(TRBrace node)
  {
    index = 23;
  }

  public void caseTPlus(TPlus node)
  {
    index = 24;
  }

  public void caseTMinus(TMinus node)
  {
    index = 25;
  }

  public void caseTQMark(TQMark node)
  {
    index = 26;
  }

  public void caseTStar(TStar node)
  {
    index = 27;
  }

  public void caseTBar(TBar node)
  {
    index = 28;
  }

  public void caseTComma(TComma node)
  {
    index = 29;
  }

  public void caseTSlash(TSlash node)
  {
    index = 30;
  }

  public void caseTArrow(TArrow node)
  {
    index = 31;
  }

  public void caseTColon(TColon node)
  {
    index = 32;
  }

  public void caseTId(TId node)
  {
    index = 33;
  }

  public void caseTChar(TChar node)
  {
    index = 34;
  }

  public void caseTDecChar(TDecChar node)
  {
    index = 35;
  }

  public void caseTHexChar(THexChar node)
  {
    index = 36;
  }

  public void caseTString(TString node)
  {
    index = 37;
  }

  public void caseEOF(EOF node)
  {
    index = 38;
  }
}
