/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.sablecc.node;

import java.util.*;
import org.sablecc.sablecc.analysis.*;

public final class AStateListTail extends PStateListTail
{
  private TId _id_;
  private PTransition _transition_;

  public AStateListTail()
  {}

  public AStateListTail(
    TId _id_,
    PTransition _transition_)
  {
    setId(_id_);

    setTransition(_transition_);

  }
  public Object clone()
  {
    return new AStateListTail(
             (TId) cloneNode(_id_),
             (PTransition) cloneNode(_transition_));
  }

  public void apply(Switch sw)
  {
    ((Analysis) sw).caseAStateListTail(this);
  }

  public TId getId()
  {
    return _id_;
  }

  public void setId(TId node)
  {
    if(_id_ != null)
    {
      _id_.parent(null);
    }

    if(node != null)
    {
      if(node.parent() != null)
      {
        node.parent().removeChild(node);
      }

      node.parent(this);
    }

    _id_ = node;
  }

  public PTransition getTransition()
  {
    return _transition_;
  }

  public void setTransition(PTransition node)
  {
    if(_transition_ != null)
    {
      _transition_.parent(null);
    }

    if(node != null)
    {
      if(node.parent() != null)
      {
        node.parent().removeChild(node);
      }

      node.parent(this);
    }

    _transition_ = node;
  }

  public String toString()
  {
    return ""
           + toString(_id_)
           + toString(_transition_);
  }

  void removeChild(Node child)
  {
    if(_id_ == child)
    {
      _id_ = null;
      return;
    }

    if(_transition_ == child)
    {
      _transition_ = null;
      return;
    }

  }

  void replaceChild(Node oldChild, Node newChild)
  {
    if(_id_ == oldChild)
    {
      setId((TId) newChild);
      return;
    }

    if(_transition_ == oldChild)
    {
      setTransition((PTransition) newChild);
      return;
    }

  }
}
