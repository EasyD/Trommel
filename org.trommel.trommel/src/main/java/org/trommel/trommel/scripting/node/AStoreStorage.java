/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.trommel.trommel.scripting.node;

import org.trommel.trommel.scripting.analysis.*;

@SuppressWarnings("nls")
public final class AStoreStorage extends PStorage
{
    private TStore _store_;
    private TInto _into_;
    private PHdfsFilePath _hdfsFilePath_;
    private TAs _as_;
    private PHdfsFile _hdfsFile_;

    public AStoreStorage()
    {
        // Constructor
    }

    public AStoreStorage(
        @SuppressWarnings("hiding") TStore _store_,
        @SuppressWarnings("hiding") TInto _into_,
        @SuppressWarnings("hiding") PHdfsFilePath _hdfsFilePath_,
        @SuppressWarnings("hiding") TAs _as_,
        @SuppressWarnings("hiding") PHdfsFile _hdfsFile_)
    {
        // Constructor
        setStore(_store_);

        setInto(_into_);

        setHdfsFilePath(_hdfsFilePath_);

        setAs(_as_);

        setHdfsFile(_hdfsFile_);

    }

    @Override
    public Object clone()
    {
        return new AStoreStorage(
            cloneNode(this._store_),
            cloneNode(this._into_),
            cloneNode(this._hdfsFilePath_),
            cloneNode(this._as_),
            cloneNode(this._hdfsFile_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStoreStorage(this);
    }

    public TStore getStore()
    {
        return this._store_;
    }

    public void setStore(TStore node)
    {
        if(this._store_ != null)
        {
            this._store_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._store_ = node;
    }

    public TInto getInto()
    {
        return this._into_;
    }

    public void setInto(TInto node)
    {
        if(this._into_ != null)
        {
            this._into_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._into_ = node;
    }

    public PHdfsFilePath getHdfsFilePath()
    {
        return this._hdfsFilePath_;
    }

    public void setHdfsFilePath(PHdfsFilePath node)
    {
        if(this._hdfsFilePath_ != null)
        {
            this._hdfsFilePath_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._hdfsFilePath_ = node;
    }

    public TAs getAs()
    {
        return this._as_;
    }

    public void setAs(TAs node)
    {
        if(this._as_ != null)
        {
            this._as_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._as_ = node;
    }

    public PHdfsFile getHdfsFile()
    {
        return this._hdfsFile_;
    }

    public void setHdfsFile(PHdfsFile node)
    {
        if(this._hdfsFile_ != null)
        {
            this._hdfsFile_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._hdfsFile_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._store_)
            + toString(this._into_)
            + toString(this._hdfsFilePath_)
            + toString(this._as_)
            + toString(this._hdfsFile_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._store_ == child)
        {
            this._store_ = null;
            return;
        }

        if(this._into_ == child)
        {
            this._into_ = null;
            return;
        }

        if(this._hdfsFilePath_ == child)
        {
            this._hdfsFilePath_ = null;
            return;
        }

        if(this._as_ == child)
        {
            this._as_ = null;
            return;
        }

        if(this._hdfsFile_ == child)
        {
            this._hdfsFile_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._store_ == oldChild)
        {
            setStore((TStore) newChild);
            return;
        }

        if(this._into_ == oldChild)
        {
            setInto((TInto) newChild);
            return;
        }

        if(this._hdfsFilePath_ == oldChild)
        {
            setHdfsFilePath((PHdfsFilePath) newChild);
            return;
        }

        if(this._as_ == oldChild)
        {
            setAs((TAs) newChild);
            return;
        }

        if(this._hdfsFile_ == oldChild)
        {
            setHdfsFile((PHdfsFile) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
