/** This file was generated by SableCC (http://www.sablecc.org/). */

package org.trommel.trommel.scripting.node;

import org.trommel.trommel.scripting.analysis.*;

@SuppressWarnings("nls")
public final class ASampleDataStatement extends PSampleDataStatement
{
    private TSample _sample_;
    private TData _data_;
    private PSampledFile _sampledFile_;
    private TAt _at_;
    private PSampleRate _sampleRate_;
    private PStorage _storage_;
    private TSemicolon _semicolon_;

    public ASampleDataStatement()
    {
        // Constructor
    }

    public ASampleDataStatement(
         TSample _sample_,
         TData _data_,
         PSampledFile _sampledFile_,
         TAt _at_,
         PSampleRate _sampleRate_,
         PStorage _storage_,
         TSemicolon _semicolon_)
    {
        // Constructor
        setSample(_sample_);

        setData(_data_);

        setSampledFile(_sampledFile_);

        setAt(_at_);

        setSampleRate(_sampleRate_);

        setStorage(_storage_);

        setSemicolon(_semicolon_);

    }

    @Override
    public Object clone()
    {
        return new ASampleDataStatement(
            cloneNode(this._sample_),
            cloneNode(this._data_),
            cloneNode(this._sampledFile_),
            cloneNode(this._at_),
            cloneNode(this._sampleRate_),
            cloneNode(this._storage_),
            cloneNode(this._semicolon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASampleDataStatement(this);
    }

    public TSample getSample()
    {
        return this._sample_;
    }

    public void setSample(TSample node)
    {
        if(this._sample_ != null)
        {
            this._sample_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sample_ = node;
    }

    public TData getData()
    {
        return this._data_;
    }

    public void setData(TData node)
    {
        if(this._data_ != null)
        {
            this._data_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._data_ = node;
    }

    public PSampledFile getSampledFile()
    {
        return this._sampledFile_;
    }

    public void setSampledFile(PSampledFile node)
    {
        if(this._sampledFile_ != null)
        {
            this._sampledFile_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sampledFile_ = node;
    }

    public TAt getAt()
    {
        return this._at_;
    }

    public void setAt(TAt node)
    {
        if(this._at_ != null)
        {
            this._at_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._at_ = node;
    }

    public PSampleRate getSampleRate()
    {
        return this._sampleRate_;
    }

    public void setSampleRate(PSampleRate node)
    {
        if(this._sampleRate_ != null)
        {
            this._sampleRate_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sampleRate_ = node;
    }

    public PStorage getStorage()
    {
        return this._storage_;
    }

    public void setStorage(PStorage node)
    {
        if(this._storage_ != null)
        {
            this._storage_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._storage_ = node;
    }

    public TSemicolon getSemicolon()
    {
        return this._semicolon_;
    }

    public void setSemicolon(TSemicolon node)
    {
        if(this._semicolon_ != null)
        {
            this._semicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semicolon_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._sample_)
            + toString(this._data_)
            + toString(this._sampledFile_)
            + toString(this._at_)
            + toString(this._sampleRate_)
            + toString(this._storage_)
            + toString(this._semicolon_);
    }

    @Override
    void removeChild( Node child)
    {
        // Remove child
        if(this._sample_ == child)
        {
            this._sample_ = null;
            return;
        }

        if(this._data_ == child)
        {
            this._data_ = null;
            return;
        }

        if(this._sampledFile_ == child)
        {
            this._sampledFile_ = null;
            return;
        }

        if(this._at_ == child)
        {
            this._at_ = null;
            return;
        }

        if(this._sampleRate_ == child)
        {
            this._sampleRate_ = null;
            return;
        }

        if(this._storage_ == child)
        {
            this._storage_ = null;
            return;
        }

        if(this._semicolon_ == child)
        {
            this._semicolon_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild( Node oldChild,  Node newChild)
    {
        // Replace child
        if(this._sample_ == oldChild)
        {
            setSample((TSample) newChild);
            return;
        }

        if(this._data_ == oldChild)
        {
            setData((TData) newChild);
            return;
        }

        if(this._sampledFile_ == oldChild)
        {
            setSampledFile((PSampledFile) newChild);
            return;
        }

        if(this._at_ == oldChild)
        {
            setAt((TAt) newChild);
            return;
        }

        if(this._sampleRate_ == oldChild)
        {
            setSampleRate((PSampleRate) newChild);
            return;
        }

        if(this._storage_ == oldChild)
        {
            setStorage((PStorage) newChild);
            return;
        }

        if(this._semicolon_ == oldChild)
        {
            setSemicolon((TSemicolon) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
