/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.trommel.trommel.scripting.parser;

import org.trommel.trommel.scripting.node.*;
import org.trommel.trommel.scripting.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTLoad(@SuppressWarnings("unused") TLoad node)
    {
        this.index = 0;
    }

    @Override
    public void caseTData(@SuppressWarnings("unused") TData node)
    {
        this.index = 1;
    }

    @Override
    public void caseTColon(@SuppressWarnings("unused") TColon node)
    {
        this.index = 2;
    }

    @Override
    public void caseTFieldType(@SuppressWarnings("unused") TFieldType node)
    {
        this.index = 3;
    }

    @Override
    public void caseTFields(@SuppressWarnings("unused") TFields node)
    {
        this.index = 4;
    }

    @Override
    public void caseTTerminated(@SuppressWarnings("unused") TTerminated node)
    {
        this.index = 5;
    }

    @Override
    public void caseTBy(@SuppressWarnings("unused") TBy node)
    {
        this.index = 6;
    }

    @Override
    public void caseTProfile(@SuppressWarnings("unused") TProfile node)
    {
        this.index = 7;
    }

    @Override
    public void caseTWith(@SuppressWarnings("unused") TWith node)
    {
        this.index = 8;
    }

    @Override
    public void caseTAll(@SuppressWarnings("unused") TAll node)
    {
        this.index = 9;
    }

    @Override
    public void caseTBuiltin(@SuppressWarnings("unused") TBuiltin node)
    {
        this.index = 10;
    }

    @Override
    public void caseTMax(@SuppressWarnings("unused") TMax node)
    {
        this.index = 11;
    }

    @Override
    public void caseTMin(@SuppressWarnings("unused") TMin node)
    {
        this.index = 12;
    }

    @Override
    public void caseTDistinct(@SuppressWarnings("unused") TDistinct node)
    {
        this.index = 13;
    }

    @Override
    public void caseTEmpty(@SuppressWarnings("unused") TEmpty node)
    {
        this.index = 14;
    }

    @Override
    public void caseTReq(@SuppressWarnings("unused") TReq node)
    {
        this.index = 15;
    }

    @Override
    public void caseTVar(@SuppressWarnings("unused") TVar node)
    {
        this.index = 16;
    }

    @Override
    public void caseTConf(@SuppressWarnings("unused") TConf node)
    {
        this.index = 17;
    }

    @Override
    public void caseTLin(@SuppressWarnings("unused") TLin node)
    {
        this.index = 18;
    }

    @Override
    public void caseTStore(@SuppressWarnings("unused") TStore node)
    {
        this.index = 19;
    }

    @Override
    public void caseTInto(@SuppressWarnings("unused") TInto node)
    {
        this.index = 20;
    }

    @Override
    public void caseTExport(@SuppressWarnings("unused") TExport node)
    {
        this.index = 21;
    }

    @Override
    public void caseTTo(@SuppressWarnings("unused") TTo node)
    {
        this.index = 22;
    }

    @Override
    public void caseTSemicolon(@SuppressWarnings("unused") TSemicolon node)
    {
        this.index = 23;
    }

    @Override
    public void caseTLeftParen(@SuppressWarnings("unused") TLeftParen node)
    {
        this.index = 24;
    }

    @Override
    public void caseTRightParen(@SuppressWarnings("unused") TRightParen node)
    {
        this.index = 25;
    }

    @Override
    public void caseTComma(@SuppressWarnings("unused") TComma node)
    {
        this.index = 26;
    }

    @Override
    public void caseTAs(@SuppressWarnings("unused") TAs node)
    {
        this.index = 27;
    }

    @Override
    public void caseTQuotedString(@SuppressWarnings("unused") TQuotedString node)
    {
        this.index = 28;
    }

    @Override
    public void caseTIdentifier(@SuppressWarnings("unused") TIdentifier node)
    {
        this.index = 29;
    }

    @Override
    public void caseTInteger(@SuppressWarnings("unused") TInteger node)
    {
        this.index = 30;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 31;
    }
}
