/** This file was generated by SableCC (http://www.sablecc.org/). */

package org.trommel.trommel.scripting.node;

import org.trommel.trommel.scripting.analysis.*;

@SuppressWarnings("nls")
public final class AListProfiledFields extends PProfiledFields
{
    private PProfiledFields _profiledFields_;
    private TComma _comma_;
    private PProfiledField _profiledField_;

    public AListProfiledFields()
    {
        // Constructor
    }

    public AListProfiledFields(
         PProfiledFields _profiledFields_,
         TComma _comma_,
         PProfiledField _profiledField_)
    {
        // Constructor
        setProfiledFields(_profiledFields_);

        setComma(_comma_);

        setProfiledField(_profiledField_);

    }

    @Override
    public Object clone()
    {
        return new AListProfiledFields(
            cloneNode(this._profiledFields_),
            cloneNode(this._comma_),
            cloneNode(this._profiledField_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAListProfiledFields(this);
    }

    public PProfiledFields getProfiledFields()
    {
        return this._profiledFields_;
    }

    public void setProfiledFields(PProfiledFields node)
    {
        if(this._profiledFields_ != null)
        {
            this._profiledFields_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._profiledFields_ = node;
    }

    public TComma getComma()
    {
        return this._comma_;
    }

    public void setComma(TComma node)
    {
        if(this._comma_ != null)
        {
            this._comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._comma_ = node;
    }

    public PProfiledField getProfiledField()
    {
        return this._profiledField_;
    }

    public void setProfiledField(PProfiledField node)
    {
        if(this._profiledField_ != null)
        {
            this._profiledField_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._profiledField_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._profiledFields_)
            + toString(this._comma_)
            + toString(this._profiledField_);
    }

    @Override
    void removeChild( Node child)
    {
        // Remove child
        if(this._profiledFields_ == child)
        {
            this._profiledFields_ = null;
            return;
        }

        if(this._comma_ == child)
        {
            this._comma_ = null;
            return;
        }

        if(this._profiledField_ == child)
        {
            this._profiledField_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild( Node oldChild,  Node newChild)
    {
        // Replace child
        if(this._profiledFields_ == oldChild)
        {
            setProfiledFields((PProfiledFields) newChild);
            return;
        }

        if(this._comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(this._profiledField_ == oldChild)
        {
            setProfiledField((PProfiledField) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
